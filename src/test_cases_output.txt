General Test Case for some FHE operations:
///////////////////////

Test_General:

*** Bound N=6928, choosing m=7781, phi(m)=7500

******** TestIt: R=1, p=2, r=1, d=1, c=2, k=80, w=64, L=6, m=7781
LAZY REDUCTIONS
m = 7781, p = 2, phi(m) = 7500
  ord(p)=50
  generator 353 has order (== Z_m^*) of 30
  generator 3 has order (!= Z_m^*) of 5

G = [0 1]
generating key-switching matrices... done
computing masks and tables for rotation...done
*** round 0...
  c1*=c0, level=10, log(noise/modulus)~-167.667
  c0+=k1, level=11, log(noise/modulus)~-178.454
  c2*=k2, level=10, log(noise/modulus)~-173.993
  c2>>=-1, level=9, log(noise/modulus)~-153.936
  c2+=tmp, level=9, log(noise/modulus)~-153.936
  c2>>>=112, level=9, log(noise/modulus)~-149.128
  c1=-c1, level=10, log(noise/modulus)~-167.667
  c3*=c2, level=8, log(noise/modulus)~-142.188
  c0=-c3, level=8, log(noise/modulus)~-142.188

  *** circuit: 0.664593 / 1 = 0.664593
  CRT_reconstruct: 2.1e-05 / 2 = 1.05e-05
  addConstant: 4.7e-05 / 1 = 4.7e-05
  addCtxt: 0.002123 / 8 = 0.000265375
  addPart: 0.004567 / 48 = 9.51458e-05
  automorph: 0.012051 / 7 = 0.00172157
  breakIntoDigits: 0.059653 / 9 = 0.00662811
  embedInSlots: 5.1e-05 / 2 = 2.55e-05
  keySwitchPart: 0.444546 / 9 = 0.049394
  modDownToSet: 0.081086 / 9 = 0.00900956
  modUpToSet: 0.000584 / 3 = 0.000194667
  multByConstant: 0.077281 / 5 = 0.0154562
  negate: 0.00015 / 1 = 0.00015
  operator*=: 0.054093 / 2 = 0.0270465
  reLinearize: 0.514159 / 9 = 0.0571288
  rotate: 0.34357 / 1 = 0.34357
  rotate1D: 0.262583 / 3 = 0.0875277
  shift: 0.237631 / 1 = 0.237631
  shift1D: 0.423347 / 2 = 0.211673
  smartAutomorph: 0.429895 / 7 = 0.0614136


  *** check: 0.094184 / 1 = 0.094184
  Decrypt: 0.068702 / 4 = 0.0171755
  decode: 0.024804 / 4 = 0.006201

/////////////////////////////////

Test_matmul (multiplication of a ciphertext with a Plaintextarray):

*** Bound N=4948, choosing m=5461, phi(m)=5292
*** TestIt: R=1, p=2, r=1, d=1, c=2, k=80, w=64, L=4, m=5461
m = 5461, p = 2, phi(m) = 5292
  ord(p)=14
  generator 3 has order (== Z_m^*) of 126
  generator 509 has order (== Z_m^*) of 3

G = [0 1]
generating key-switching matrices... done
computing masks and tables for rotation...done
378 size

[[0] [0] [1] [0] [1] [0] [0] [1] [1] [1] [1] [1] [1] [1] [1] [1] [1] [0] [1] [0] [1] [1] [1] [0] [1] [0] [0] [0] [0] [1] [1] [0] [0] [1] [1] [0] [1] [0] [1] [0] [0] [0] [0] [1] [0] [1] [1] [0] [0] [0] [1] [1] [1] [1] [0] [0] [1] [0] [0] [1] [0] [1] [0] [0] [1] [0] [0] [0] [1] [1] [0] [0] [0] [1] [0] [0] [0] [0] [0] [0] [0] [0] [1] [0] [1] [0] [0] [1] [0] [0] [1] [0] [0] [0] [1] [1] [1] [0] [1] [1] [0] [1] [0] [1] [0] [1] [0] [0] [0] [1] [1] [1] [1] [0] [0] [1] [0] [1] [0] [1] [0] [1] [0] [1] [1] [1] [1] [0] [0] [1] [0] [1] [1] [0] [0] [0] [1] [1] [1] [0] [1] [1] [0] [1] [0] [0] [1] [0] [0] [0] [1] [1] [0] [1] [1] [1] [0] [1] [1] [1] [1] [0] [0] [1] [0] [0] [1] [0] [1] [1] [0] [1] [1] [0] [1] [1] [1] [1] [0] [1] [0] [0] [0] [0] [0] [1] [0] [1] [0] [0] [1] [0] [0] [0] [0] [1] [1] [0] [0] [1] [0] [0] [0] [0] [0] [0] [1] [1] [1] [0] [0] [0] [0] [1] [0] [0] [0] [0] [0] [1] [1] [0] [0] [0] [1] [1] [0] [1] [0] [1] [0] [0] [1] [1] [0] [0] [0] [1] [0] [0] [0] [1] [1] [0] [1] [0] [0] [1] [1] [0] [0] [1] [1] [0] [1] [0] [1] [1] [0] [0] [0] [1] [0] [0] [0] [1] [1] [0] [1] [0] [0] [0] [0] [0] [1] [1] [1] [0] [1] [0] [0] [1] [0] [1] [1] [1] [1] [1] [0] [1] [0] [0] [1] [1] [1] [1] [1] [1] [0] [1] [1] [0] [0] [1] [0] [1] [0] [0] [1] [1] [0] [0] [0] [1] [1] [0] [0] [0] [1] [0] [1] [1] [0] [1] [0] [0] [0] [0] [1] [1] [1] [0] [1] [0] [0] [1] [1] [0] [0] [0] [0] [0] [0] [1] [1] [1] [0] [0] [0] [1] [1] [1] [0] [1] [1] [1] [0] [1] [0] [1] [1] [1] [0] [0] [0] [1] [0] [1] [1] [1] [0] [1] [1] [0] [1] [1] [1] [1]]

Nice!!

  ea.decrypt: 0.02109 / 1 = 0.02109
  ea.encrypt: 0.022151 / 1 = 0.022151
  ea.mat_mul: 29.4293 / 1 = 29.4293

//////////////////////////////////////////

Test_vectoraddmul(addition and multiplication of vectors with long numbers using FHE):

Generated key...
Vector Size 480
  decryptproduct: 0.326988 / 1 = 0.326988
  decryptsum: 0.140666 / 1 = 0.140666
  ea.encrypt1: 0.193721 / 1 = 0.193721
  ea.encrypt2: 0.143152 / 1 = 0.143152
  product: 0.249537 / 1 = 0.249537
  sum: 0.001023 / 1 = 0.001023

All computations are modulo 2.

///////////////////////////////////////////